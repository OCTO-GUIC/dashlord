name: DashLord scans

on:
  workflow_dispatch:
    inputs:
      url:
        description: "Single url to scan or scan all urls"
        required: false
        default: "https://annuaire-entreprises.data.gouv.fr"
      tool:
        description: "Single tool to run or use all tools"
        type: choice
        default: all
        options:
          - all
          - codescan
          - dependabot
          - ecoindex
          - lighthouse
          - sonarcloud
          - trivy
          - zap
          - ecoindex
          - dsfr

jobs:
  init:
    runs-on: ubuntu-latest
    name: Prepare
    outputs:
      sites: ${{ steps.init.outputs.sites }}
      config: ${{ steps.init.outputs.config }}
    steps:
      - uses: actions/checkout@v2
      - id: init
        uses: "SocialGouv/dashlord-actions/init@v1"
        with:
          url: ${{ github.event.inputs.url }}
          tool: ${{ github.event.inputs.tool }}
        env:
          UPDOWNIO_API_KEY: ${{ secrets.UPDOWNIO_API_KEY }}
  scans:
    runs-on: ubuntu-latest
    name: Scan
    needs: init
    continue-on-error: true
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        sites: ${{ fromJson(needs.init.outputs.sites) }}
    steps:
      - uses: actions/checkout@v2

      - run: |
          mkdir scans

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: dsfr
        continue-on-error: true
        timeout-minutes: 10
        uses: "socialgouv/dashlord-actions/dsfr@v1"
        if: ${{ matrix.sites.tools.dsfr }}
        with:
          url: ${{ matrix.sites.url }}
          output: scans/dsfr.json
 
      - name: DÃ©claration a11y
        continue-on-error: true
        timeout-minutes: 10
        uses: "socialgouv/dashlord-actions/declaration-a11y@v1"
        if: ${{ matrix.sites.tools['declaration-a11y'] }}
        with:
          url: ${{ matrix.sites.url }}
          output: scans/declaration-a11y.json
 

      # testssl.sh action needs an hostname to save its output so we build it here
      - name: Extract hostname
        id: hostname
        run: |
          HOSTNAME=$(echo "${{ matrix.sites.url }}" | sed -e 's/[^/]*\/\/\([^@]*@\)\?\([^:/]*\).*/\2/')
          echo "::set-output name=value::$HOSTNAME"
 

      - name: Betagouv API scan
        if: ${{ matrix.sites.tools.betagouv }}
        continue-on-error: true
        timeout-minutes: 10
        id: betagouv
        uses: betagouv/dashlord-startup-action@main
        with:
          id: "${{ matrix.sites.betaId }}"
          output: "scans/betagouv.json"

      - name: Stats page
        continue-on-error: true
        timeout-minutes: 10
        uses: "betagouv/check-url-action@main"
        if: ${{ matrix.sites.tools.stats }}
        with:
          url: ${{ steps.betagouv.outputs.stats_url }}
          output: scans/stats.json

      - name: Budget page
        continue-on-error: true
        timeout-minutes: 10
        uses: "betagouv/check-url-action@main"
        if: ${{ matrix.sites.tools.budget_page }}
        with:
          url: ${{ steps.betagouv.outputs.budget_url }}
          output: scans/budget_page.json

      - name: Open Github repository
        continue-on-error: true
        timeout-minutes: 10
        uses: "betagouv/check-url-action@main"
        if: ${{ matrix.sites.tools.betagouv }}
        with:
          url: ${{ steps.betagouv.outputs.github_repository }}
          output: scans/github_repository.json

      - name: debug
        run: |
          ls -la scans
          cat scans/*
          
      - uses: SocialGouv/dashlord-actions/save@v1
        with:
          url: ${{ matrix.sites.url }}
          # only clean up previous stats when all tools runned
          cleanup: ${{ github.event.inputs.tool == 'all' && true || false }}

      - uses: EndBug/add-and-commit@v9
        with:
          add: "results"
          author_name: "DashlordBetaGouvBot"
          author_email: "DashlordBetaGouvBot@incubateur.net"
          message: "update: ${{ matrix.sites.url }}"
          pull: '--rebase --autostash'
